=head1 NAME

lcfgpackageiterator - Library for handling lists of LCFG package specifications.

=head1 VERSION

This documentation refers to lcfgpackageiterator version @LCFG_VERSION@

=head1 SYNOPSIS

  #include <lcfg/packages.h>

  LCFGPackageList * pkglist;
  char * errmsg;

  lcfgpkglist_from_rpmlist( "rpmlist", &pkglist, &errmsg );
  LCFGPackageIterator * pkgiter = lcfgpkgiter_new(pkglist,false);

  LCFGPackageSpec * pkgspec;
  while( ( pkgspec = lcfgpkgiter_next(pkgiter) ) != NULL ) {
    lcfgpkgspec_print( pkgspec, "x86_64", NULL, stdout );
  }

  lcfgpkgiter_destroy(pkgiter);
  lcfgpkglist_destroy(pkglist);

=head1 DESCRIPTION

The LCFG packagelib library provides all the functions and structures
necessary for parsing and manipulating LCFG package specifications.

This documentation describes the I<lcfgpkgiter> suite of functions
which provide an alternative interface for processing lists of LCFG
package specifications.

The LCFGPackageIterator struct holds a pointer to the
LCFGPackageList struct. It also holds the current location in that
list and a flag that records when the end has been reached. 

=head1 FUNCTIONS

The following functions are available for iterating through lists of
LCFG package specifications. For complete details of the API see the
C<lcfg/packages.h> header.

=head2 CONSTRUCTORS AND DESTRUCTORS

Note that when no longer required the contents of the
LCFGPackageIterator struct should be released using the
C<lcfgpkgiter_destroy> function.

=over

=item lcfgpkgiter_new(LCFGPackageList * pkglist, bool manage)

Creates a new empty LCFGPackageIterator struct, stores the
LCFGPackageList pointer provided and returns a pointer.

If the C<manage> parameter is set to true then C<lcfgpkglist_destroy>
when C<lcfgpkgiter_destroy> is called.

=item lcfgpkgiter_destroy(LCFGPackageIterator * pkgiter)

This will free the memory for the LCFGPackageIterator struct. It will
only free any memory associated with the LCFGPackageList struct when
the C<manage> parameter is set to true. If it is set to false then
that must be done separately using the C<lcfgpkglist_destroy>
function.

=back

=head2 OTHERS

=over

=item lcfgpkgiter_next( LCFGPackageIterator * pkgiter )

Returns a pointer to the next LCFGPackageSpec struct in the
LCFGPackageList. If the end of the list is reached then a NULL value
will be returned.

=item lcfgpkgiter_has_next(  LCFGPackageIterator * pkgiter )

This returns a boolean value which indicates whether or not there are
further LCFGPackageSpec structs to come after the current position in
the list.

=item lcfgpkgiter_reset( LCFGPackageIterator * pkgiter )

Resets the iterator to the head of the LCFGPackageList singly-linked
list so that it can be processed again.

=back

=head1 SEE ALSO

lcfgpackagelib(3), lcfgpackagespec(3), lcfgpackagelist(3)

=head1 PLATFORMS

This is the list of platforms on which we have tested this
software. We expect this software to work on any Unix-like platform.

@LCFG_PLATFORMS@

=head1 BUGS AND LIMITATIONS

Please report any bugs or problems (or praise!) to bugs@lcfg.org,
feedback and patches are also always very welcome.

=head1 AUTHOR

@LCFG_AUTHOR@

=head1 LICENSE AND COPYRIGHT

Copyright (C) 2015 University of Edinburgh. All rights reserved.

This library is free software; you can redistribute it and/or modify
it under the terms of the GPL, version 2 or later.

=cut
